<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="MainAll" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="MainAngle" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="MainAngleDeg" xml:space="preserve">
    <value>角度 (°)</value>
  </data>
  <data name="MainArticle" xml:space="preserve">
    <value>文章</value>
  </data>
  <data name="MainClipboard" xml:space="preserve">
    <value>剪贴板</value>
  </data>
  <data name="MainCopy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="MainCustomer" xml:space="preserve">
    <value>自己的团体</value>
  </data>
  <data name="MainCut" xml:space="preserve">
    <value>切</value>
  </data>
  <data name="MainDelete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="MainDistance" xml:space="preserve">
    <value>距离</value>
  </data>
  <data name="MainDuplicate" xml:space="preserve">
    <value>重复</value>
  </data>
  <data name="MainFileAbout" xml:space="preserve">
    <value>关于 ...</value>
  </data>
  <data name="MainFileExit" xml:space="preserve">
    <value>出口</value>
  </data>
  <data name="MainFileHelp" xml:space="preserve">
    <value>救命 ...</value>
  </data>
  <data name="MainFileNew" xml:space="preserve">
    <value>新</value>
  </data>
  <data name="MainFileOpen" xml:space="preserve">
    <value>打开 ...</value>
  </data>
  <data name="MainFilePrint" xml:space="preserve">
    <value>打印 ...</value>
  </data>
  <data name="MainFilePrintPreview" xml:space="preserve">
    <value>打印预览 ...</value>
  </data>
  <data name="MainFileRecentFiles" xml:space="preserve">
    <value>最近的文件</value>
  </data>
  <data name="MainFileSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="MainFileSaveAs" xml:space="preserve">
    <value>另存为 ...</value>
  </data>
  <data name="MainGauge" xml:space="preserve">
    <value>量规</value>
  </data>
  <data name="MainGradientPerc" xml:space="preserve">
    <value>梯度 (%)</value>
  </data>
  <data name="MainGridLines" xml:space="preserve">
    <value>网格线</value>
  </data>
  <data name="MainGroup" xml:space="preserve">
    <value>团体</value>
  </data>
  <data name="MainGroupCreate" xml:space="preserve">
    <value>创建组</value>
  </data>
  <data name="MainGroupResolve" xml:space="preserve">
    <value>取消分组</value>
  </data>
  <data name="MainGroups" xml:space="preserve">
    <value>团体</value>
  </data>
  <data name="MainGroupSaveAs" xml:space="preserve">
    <value>将群组另存为 ...</value>
  </data>
  <data name="MainHeightmm" xml:space="preserve">
    <value>高度 (mm)</value>
  </data>
  <data name="MainHistory" xml:space="preserve">
    <value>历史</value>
  </data>
  <data name="MainLayer" xml:space="preserve">
    <value>层</value>
  </data>
  <data name="MainManufacturer" xml:space="preserve">
    <value>制造商</value>
  </data>
  <data name="MainName" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="MainOptions" xml:space="preserve">
    <value>选件 ...</value>
  </data>
  <data name="MainPaste" xml:space="preserve">
    <value>糊</value>
  </data>
  <data name="MainPlan" xml:space="preserve">
    <value>计划</value>
  </data>
  <data name="MainPosition" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="MainRail" xml:space="preserve">
    <value>轨</value>
  </data>
  <data name="MainRailPlan" xml:space="preserve">
    <value>铁路计划</value>
  </data>
  <data name="MainRamp" xml:space="preserve">
    <value>坡道</value>
  </data>
  <data name="MainRampCreate" xml:space="preserve">
    <value>创建坡道</value>
  </data>
  <data name="MainRampDelete" xml:space="preserve">
    <value>删除坡道</value>
  </data>
  <data name="MainRedo" xml:space="preserve">
    <value>重做</value>
  </data>
  <data name="MainRotation" xml:space="preserve">
    <value>回转</value>
  </data>
  <data name="MainSelectAll" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="MainShowDockingPoints" xml:space="preserve">
    <value>显示停靠点</value>
  </data>
  <data name="MainShowTrackList" xml:space="preserve">
    <value>显示曲目列表</value>
  </data>
  <data name="MainSingle" xml:space="preserve">
    <value>曲目</value>
  </data>
  <data name="MainSnapIn" xml:space="preserve">
    <value>抢购</value>
  </data>
  <data name="MainSwitches" xml:space="preserve">
    <value>开关</value>
  </data>
  <data name="MainTerrain" xml:space="preserve">
    <value>地形</value>
  </data>
  <data name="MainTilt" xml:space="preserve">
    <value>倾斜</value>
  </data>
  <data name="MainTools" xml:space="preserve">
    <value>工具</value>
  </data>
  <data name="MainTracks" xml:space="preserve">
    <value>轨道</value>
  </data>
  <data name="MainUndo" xml:space="preserve">
    <value>撤消</value>
  </data>
  <data name="MainViewModes" xml:space="preserve">
    <value>查看模式</value>
  </data>
  <data name="MainXmm" xml:space="preserve">
    <value>x坐标 (mm)</value>
  </data>
  <data name="MainYmm" xml:space="preserve">
    <value>y坐标 (mm)</value>
  </data>
  <data name="MainZoom" xml:space="preserve">
    <value>放大</value>
  </data>
  <data name="MenuDelete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="MenuProperties" xml:space="preserve">
    <value>物产</value>
  </data>
  <data name="MenuRotate" xml:space="preserve">
    <value>旋转</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>好</value>
  </data>
  <data name="OptionsLanguage" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="OptionsTitle" xml:space="preserve">
    <value>选件</value>
  </data>
  <data name="OptionsVisibleAfterRestart" xml:space="preserve">
    <value>重新启动后可见</value>
  </data>
  <data name="RailPlanView" xml:space="preserve">
    <value>铁路平面图</value>
  </data>
  <data name="TrackAdapter" xml:space="preserve">
    <value>适配器轨道</value>
  </data>
  <data name="TrackBumper" xml:space="preserve">
    <value>轨道末端带保险杠</value>
  </data>
  <data name="TrackCrossing" xml:space="preserve">
    <value>穿越</value>
  </data>
  <data name="TrackCurved" xml:space="preserve">
    <value>弯轨</value>
  </data>
  <data name="TrackCurvedCircuit" xml:space="preserve">
    <value>弯曲电路轨迹</value>
  </data>
  <data name="TrackCurvedTurnoutLeft" xml:space="preserve">
    <value>左弯道</value>
  </data>
  <data name="TrackCurvedTurnoutRight" xml:space="preserve">
    <value>右弯道岔</value>
  </data>
  <data name="TrackDoubleCrossover" xml:space="preserve">
    <value>双交叉</value>
  </data>
  <data name="TrackDoubleSlipSwitch" xml:space="preserve">
    <value>双滑动开关</value>
  </data>
  <data name="TrackDoubleTurnout" xml:space="preserve">
    <value>三通道岔</value>
  </data>
  <data name="TrackDriveElectrical" xml:space="preserve">
    <value>电的</value>
  </data>
  <data name="TrackDriveMechanical" xml:space="preserve">
    <value>机械</value>
  </data>
  <data name="TrackEndPiece" xml:space="preserve">
    <value>末端带轨道路基</value>
  </data>
  <data name="TrackFlex" xml:space="preserve">
    <value>弹性轨道</value>
  </data>
  <data name="TrackStraight" xml:space="preserve">
    <value>直轨</value>
  </data>
  <data name="TrackStraightAdjustment" xml:space="preserve">
    <value>直调</value>
  </data>
  <data name="TrackStraightCircuit" xml:space="preserve">
    <value>直线轨道</value>
  </data>
  <data name="TrackStraightContact" xml:space="preserve">
    <value>联系人跟踪</value>
  </data>
  <data name="TrackStraightFeeder" xml:space="preserve">
    <value>直进料机</value>
  </data>
  <data name="TrackStraightIsolating" xml:space="preserve">
    <value>直隔离</value>
  </data>
  <data name="TrackStraightUncoupler" xml:space="preserve">
    <value>直型解耦器</value>
  </data>
  <data name="TrackTransferTable" xml:space="preserve">
    <value>转移表</value>
  </data>
  <data name="TrackTurnoutLeft" xml:space="preserve">
    <value>左道</value>
  </data>
  <data name="TrackTurnoutRight" xml:space="preserve">
    <value>正确的道岔</value>
  </data>
  <data name="TrackTurntable" xml:space="preserve">
    <value>转盘</value>
  </data>
  <data name="TrackWithLantern" xml:space="preserve">
    <value>用灯笼</value>
  </data>
  <data name="TrackYTurnout" xml:space="preserve">
    <value>Y形道</value>
  </data>
</root>